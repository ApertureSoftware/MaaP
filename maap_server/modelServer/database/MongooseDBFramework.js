/** * File: MongooseDBFramework.js * Module: maap_server::modelServer::database * Author: Fabio Miotto * Created: 08/05/14 * Version: 1.0.0 * Description: gestione db  * Modification History: ============================================== * Version | Changes ============================================== * 0.1 File creation ============================================== */ //mostra tutti i warning possibili'use strict';var mongoose = require('mongoose'); /** * Inizializza il database utenti creando lo schema utenti e schema query, oltre che ai relativi modelli che * vengono esportati * *@param app - applicazione express contenente la configurazione del sistema */exports.init = function(app) {		var config = app.config;	var db = app.db.users;	var usersCollection = app.config.userDB.usersCollection;	var queryCollection = app.config.userDB.queryCollection;		//creo uno schema per gli utenti	var LocalUserSchema = new mongoose.Schema({		//specifico come è composta l'email		email: { 				type: String, 				required: true		},		//specifico come è composta la password		password: {			type: String,			required: true		},		//specifico come è composto il livello		level: {			type: Number, min: 0, max: 1,			required: true		}	}, {collection: config.userDB.usersCollection});	//creo uno schema per le query	var QuerySchema = new mongoose.Schema({		//specifico come è composto il nome della collection		collection_name: {			type: String, 			required: true		},		//specifico come è composto il select della query		select: {			type: {}, 			required: true		},		//specifico come è composto il counter della query		counter: {			type: Number, min: 0, default: 0		}		}, {collection: config.userDB.queryCollection});		//definisco il modello per gli utenti	exports.users = db.model(usersCollection, LocalUserSchema);	//definisco il modello per le query		exports.query = db.model(queryCollection, QuerySchema);				exports.connection = db;}